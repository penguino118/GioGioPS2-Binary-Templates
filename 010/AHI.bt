//------------------------------------------------
//--- 010 Editor v13.0.2 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
struct HeadSector {
    SetBackColor( 0x900040 );
    uint Magic <format=hex>;
    uint DataCount;
    uint SectorSize;
};

struct TreeSector {
    SetBackColor( 0xC0c000 );
    uint Magic <format=hex>;
    uint DataCount;
    uint SectorSize;
    SetBackColor( 0x908000 );
    local int i <hidden=true>;
    for (i=0; i<DataCount; i++) {
       uint RootBone;
    }
};

struct BoneSector {
    SetBackColor( 0x00B0C0 );
    uint BoneType <format=hex, comment="Dunno what it's for exactly. Playermodels only use 40000001h">;
    uint DataCount <hidden=true>;
    uint SectorSize <hidden=true>;
    SetBackColor( 0x2040f0 );
    int BoneID;
    int BoneParent;
    int BoneChild;
    SetBackColor( 0x003080 );
    int Unknown1 <comment="ID for the bone opposite to it (???)">;
       // ID for the equivalent bone in the opposite side (?????) on humanoids...
       //...left shoulder sets it to right shoulder, left leg sets it to right leg,
       //neither right leg or right shoulder have it set to the left leg or left shoulder
       //crashes the whole ass game if I set it to a different bone or null it (?!?!?!?!)
    SetBackColor( 0x50A000 );
    struct TransMatrix {
        float X;
        float Y;
        float Z;
        float huh;
    } ShadowMeshSize, BoneRotation, BonePosition;
    SetBackColor( 0x504000 );
    int Mesh2InheritTranslation;
};

//file header
uint TestMagic <hidden=true>;
FSkip(-0x04);
if (TestMagic == 3221225472)
    HeadSector FileHead;

//PlAHIGetTreeNum
uint TestMagic <hidden=true>;
FSkip(-0x04);
if (TestMagic == 0)
    TreeSector TreeRoot;
    

Printf( "FileHead Count: %d\n", FileHead.DataCount);

//normal bone data
local int i <hidden=true>;
for (i=0; i<(FileHead.DataCount-1); i++) {
    BoneSector Bone;
    FSkip(188);
}
